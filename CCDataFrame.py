# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.6.8 on Sat Oct 12 14:20:36 2013
#

import wx
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class CCDataFrame(wx.Frame):
    """ The Current Sample Display Frame of the Captor Interface. 
    Holds only static text showing the last sample's parameters.
    """
    def __init__(self, *args, **kwds):
        # begin wxGlade: CCDataFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.label_2 = wx.StaticText(self, wx.ID_ANY, _("Captor Sample Data"))
        self.label_1 = wx.StaticText(self, wx.ID_ANY, _("Sample Time"))
        self.time_label = wx.StaticText(self, wx.ID_ANY, _("-"))
        self.label_1_copy_1 = wx.StaticText(self, wx.ID_ANY, _("Sample Temperature"))
        self.temp_label = wx.StaticText(self, wx.ID_ANY, _("-"))
        self.label_1_copy_2 = wx.StaticText(self, wx.ID_ANY, _("Brightness"))
        self.bgt_label = wx.StaticText(self, wx.ID_ANY, _("-"))
        self.Background = wx.StaticText(self, wx.ID_ANY, _("Background"))
        self.background_od_label = wx.StaticText(self, wx.ID_ANY, _("-"))
        self.label_1_copy = wx.StaticText(self, wx.ID_ANY, _("OD 850nm"))
        self.od_850_label = wx.StaticText(self, wx.ID_ANY, _("-"))
        self.label_1_copy_3 = wx.StaticText(self, wx.ID_ANY, _("OD 740nm"))
        self.od_740_label = wx.StaticText(self, wx.ID_ANY, _("-"))
        self.label_1_copy_4 = wx.StaticText(self, wx.ID_ANY, _("OD Red"))
        self.od_red_label = wx.StaticText(self, wx.ID_ANY, _("-"))
        self.label_1_copy_5 = wx.StaticText(self, wx.ID_ANY, _("OD Green"))
        self.od_green_label = wx.StaticText(self, wx.ID_ANY, _("-"))
        self.label_1_copy_6 = wx.StaticText(self, wx.ID_ANY, _("OD Blue"))
        self.od_blue_label = wx.StaticText(self, wx.ID_ANY, _("-"))

        self.__set_properties()
        self.__do_layout()
        # end wxGlade
        self.__attach_events()
        self.mainFrame = None

    def __set_properties(self):
        # begin wxGlade: CCDataFrame.__set_properties
        self.SetTitle(_("Captor Sample Data"))
        self.SetSize((730, 160))
        self.label_2.SetFont(wx.Font(40, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Lucida Grande"))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: CCDataFrame.__do_layout
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_3 = wx.GridSizer(5, 2, 0, 0)
        grid_sizer_1 = wx.GridSizer(4, 2, 0, 0)
        sizer_4.Add(self.label_2, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        grid_sizer_1.Add(self.label_1, 0, 0, 0)
        grid_sizer_1.Add(self.time_label, 0, 0, 0)
        grid_sizer_1.Add(self.label_1_copy_1, 0, 0, 0)
        grid_sizer_1.Add(self.temp_label, 0, 0, 0)
        grid_sizer_1.Add(self.label_1_copy_2, 0, 0, 0)
        grid_sizer_1.Add(self.bgt_label, 0, 0, 0)
        grid_sizer_1.Add(self.Background, 0, 0, 0)
        grid_sizer_1.Add(self.background_od_label, 0, 0, 0)
        sizer_2.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        grid_sizer_3.Add(self.label_1_copy, 0, 0, 0)
        grid_sizer_3.Add(self.od_850_label, 0, 0, 0)
        grid_sizer_3.Add(self.label_1_copy_3, 0, 0, 0)
        grid_sizer_3.Add(self.od_740_label, 0, 0, 0)
        grid_sizer_3.Add(self.label_1_copy_4, 0, 0, 0)
        grid_sizer_3.Add(self.od_red_label, 0, 0, 0)
        grid_sizer_3.Add(self.label_1_copy_5, 0, 0, 0)
        grid_sizer_3.Add(self.od_green_label, 0, 0, 0)
        grid_sizer_3.Add(self.label_1_copy_6, 0, 0, 0)
        grid_sizer_3.Add(self.od_blue_label, 0, 0, 0)
        sizer_2.Add(grid_sizer_3, 1, wx.EXPAND, 0)
        sizer_4.Add(sizer_2, 1, wx.EXPAND, 0)
        sizer_3.Add(sizer_4, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_3)
        self.Layout()
        # end wxGlade

    def __attach_events(self):
        #register events at the controls
        self.Bind(wx.EVT_CLOSE, self.OnClose)

    def OnClose(self, event):
        """Called on frame close."""
        self.mainFrame.dataFrame = None # tell mainframe that window is closed
        self.Destroy()
# end of class CCDataFrame
